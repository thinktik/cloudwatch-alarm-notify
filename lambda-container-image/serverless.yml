# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/
# 服务名称
service: poc-viper

frameworkVersion: '2'
# 服务提供商
provider:
  lambdaHashingVersion: 20201221
  # 服务提供商名称
  name: aws
  # 运行时
  runtime: ${opt:runtime,file(./serverless_config.yml):DEFAULT_PY_RUNTIME}
  # 内存大小
  memorySize: ${opt:memorySize,file(./serverless_config.yml):DEFAULT_MEMORY_SIZE}
  # 日志保留时间
  logRetentionInDays: ${opt:logRetentionInDays,file(./serverless_config.yml):LOG_RETENTIONIN_DAYS}
  # aws stage,也就是环境
  stage: ${opt:stage,file(./serverless_config.yml):DEFAULT_DEPLOY_ENV}
  # aws 服务区
  region: ${opt:region,file(./serverless_config.yml):AWS_DEFAULT_REGION}
  # aws credentials profile
  profile: ${opt:profile,file(./serverless_config.yml):AWS_PROFILE_NAME}
  # aws account id
  awsAccount: ${opt:awsAccount,file(./serverless_config.yml):AWS_ACCOUNT}
  # 超时时间
  timeout: ${opt:timeout,file(./serverless_config.yml):DEFAULT_TIMEOUT}
  vpc:
    securityGroupIds:
      - ${file(./serverless_config.yml):GATEWAY_SG}
    subnetIds:
      - subnet-05223ee7a776db296
      - subnet-07999eb708e5f6074
      - subnet-0e06537046eea7a19
  ecr:
    images:
      baseimage:
        uri: 559259618598.dkr.ecr.ap-south-1.amazonaws.com/lambda-hello-world:latest
      anotherimage:
        path: ./ # Path to Docker context that will be used when building that image locally
        file: Dockerfile # Name of Dockerfile that should be used when building image locally. Equal to 'Dockerfile' by default

  environment:
    STAGE: ${self:provider.stage}
    SERVICE_NAME: ${self:service}
    REGION: ${self:provider.region}
  apiGateway:
    restApiId:
      Fn::ImportValue: iot-platform-${self:provider.stage}-ApiGateway-restApiId
    restApiRootResourceId:
      Fn::ImportValue: iot-platform-${self:provider.stage}-ApiGateway-rootResourceId
    restApiResources:
      /poc: 1pd28c
  role: arn:aws:iam::${self:provider.awsAccount}:role/serverless-container-role-for-lambda
  endpointType: regional
  deploymentBucket:
    blockPublicAccess: true
    skipPolicySetup: true
    name: ${file(./serverless_config.yml):LAMBDA_DEPLOY_S3_BUCKET}-${self:provider.stage}
    #deploymentPrefix: ${self:service}

# 排除文件
package:
  exclude:
    # 排除环境配置文件
    - serverless_config.yml
    ## 排除sh脚本
    - ./*.sh
    ## 排除历史环境变量
    - ./*.env


functions:
  helloContainer:
    name: poc_container
    description: 测试 container 部署方式
    image: baseimage
    events:
      - http:
          path: poc/viper/container
          method: get
